
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="text-center">
    <h2 class="display-6">Bienvenido @User.Identity.Name</h2>
    <hr />

    <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
    <div class="container">
        <div class="row">
            <div class="col-md-4 col-xl-3">
                <div class="card bg-c-blue order-card">
                    <div class="card-block">
                        <h6 class="m-b-20"> Técnicos </h6>
                        <i class="icofont-ui-user f-left d-inline text-dark" style="width:7px;"></i>
                        <h2 id="tecnico" class="text-right d-inline"><span>0</span></h2>
                    </div>
                </div>
            </div>

            <div class="col-md-4 col-xl-3">
                <div class="card bg-c-green order-card">
                    <div class="card-block">
                        <h6 class="m-b-20 ">Usuarios</h6>
                        <i class="icofont-user-alt-5 f-left d-inline text-dark " style="width:7px;"></i>
                            <h2 id="usuarios" class="text-center d-inline"><span>0</span></h2>
                    </div>
                </div>
            </div>

            <div class="col-md-4 col-xl-3">
                <div class="card bg-c-yellow order-card">
                    <div class="card-block">
                        <h6 class="m-b-20">Administradores</h6>
                        <i class="icofont-user-suited f-left d-inline text-dark" style="width:7px;"></i>
                        <h2 id="admin" class="text-right d-inline"><span>0</span></h2>
                    </div>
                </div>
            </div>

            <div class="col-md-4 col-xl-3">
                <div class="card bg-c-pink order-card">
                    <div class="card-block">
                        <h6 class="m-b-20">Ticket Cerrados Este Mes</h6>
                        <i class="icofont-ticket f-left text-dark" style="width:7px;"></i>
                    
                        <h2 id="Tickets" class="text-right d-inline"><span>0</span></h2>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container text-center">
 
        

        <div class="row mt-2">
        <div class="col-sm-6">
            <div class="card">
                <div class="card-header">Tickets</div>
                <div class="card-body">
                    <canvas id="chartTickets" style="max-height:250px"></canvas>
                </div>
            </div>
        </div>


        <div class="col-sm-6">
            <div class="card">
                <div class="card-header">Tickets Asignados</div>
                <div class="card-body">
                    <canvas id="chartAsignados" style="max-height:250px"></canvas>
                </div>
            </div>
        </div>
        </div>
    </div>
</div>


@section Scripts{

    <script type="text/javascript">
        window.history.forward(-1);
    </script>

    <script>
        function ResumenTickets() {

            fetch("/TbTickets/ResumenTickets")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {
                    //console.log(dataJson)

                    const labels = dataJson.map((item) => { return item.despricionP })
                    const values = dataJson.map((item) => { return item.idEstado })

                    //console.log(labels)
                    //console.log(values)

                    const data = {
                        labels: labels,
                        datasets: [{
                            label: 'Tickets',
                            data: values,
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.2)',
                                'rgba(255, 159, 64, 0.2)',
                                'rgba(255, 205, 86, 0.2)',
                                'rgba(75, 192, 192, 0.2)',
                            ],
                            borderColor: [
                                'rgb(255, 99, 132)',
                                'rgb(255, 159, 64)',
                                'rgb(255, 205, 86)',
                                'rgb(75, 192, 192)',
                            ],
                            borderWidth: 1
                        }]
                    };

                    const config = {
                        type: 'bar',
                        data: data,
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        },
                    };

                    const canvasBarras = document.getElementById("chartTickets");
                    const graficoBarras = new Chart(canvasBarras, config);
                })


        }
        function ResumenAsignados() {

            fetch("/TbTickets/ResumeTicketsTecnicos")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {
                    //console.log(dataJson)

                    const labels = dataJson.map((item) => { return item.nombreUsusario })
                    const values = dataJson.map((item) => { return item.idTicket })

                    //console.log(labels)
                    //console.log(values)

                    const data2 = {
                        labels: labels,
                        datasets: [{
                            label: 'Tecnicos',
                            data: values,
                            backgroundColor: [
                                'rgb(255, 99, 132)',
                                'rgb(54, 162, 235)',
                                'rgb(255, 205, 86)',
                                'rgba(75, 192, 192)',
                                'rgba(54, 162, 235)',
                                'rgba(153, 102, 255)',
                                'rgba(201, 203, 207)'
                            ],
                            hoverOffset: 4
                        }]
                    };

                    const config = {
                        type: 'doughnut',
                        data: data2,
                    };

                    const canvasDona = document.getElementById("chartAsignados");
                    const graficoDona = new Chart(canvasDona, config);


                })
        }
        function ResumenTecnico() {

            fetch("/TbTickets/contadorDetecnico")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {
                    //console.log(dataJson)

                    document.getElementById('tecnico').innerHTML=dataJson.length;
                })
        }
        function ResumenUsusarios() {

            fetch("/TbTickets/contadorDeUser")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {
                    //console.log(dataJson)

                    document.getElementById('usuarios').innerHTML = dataJson.length;
                })
        }

        function ResumenAdmin() {

            fetch("/TbTickets/contadorDeAdmin")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {
                    //console.log(dataJson)

                    document.getElementById('admin').innerHTML = dataJson.length;
                })
        }

        function ResumenMes() {

            fetch("/TbTicketsCerradoes/BuscarPorMes")
                .then((response) => {
                    return response.ok ? response.json() : Promise.reject(response);
                })
                .then((dataJson) => {
                    console.log(dataJson)

                    //document.getElementById('admin').innerHTML = dataJson.length;
                    const values = dataJson.map((item) => { return item.idCerrados })
                    let suma = 0;
                    values.forEach(value => {suma+=value} );

                    //$.each(values, function () {
                    //    suma += this.values;
                    //});
                   
                    console.log(values)
                    console.log(suma)

                    document.getElementById('Tickets').innerHTML= suma;

                

                    

                })
        }





        $(document).ready(() => {

            ResumenTickets()
            ResumenAsignados()
            ResumenTecnico()
            ResumenUsusarios()
            ResumenAdmin()
            ResumenMes()
            
            

        })

    </script>

}
